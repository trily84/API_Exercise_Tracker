((api,r,m,echo)=>{
    //Array.prototype.contains=function(){return this.indexOf(arguments[0])>=0};
    ((JFile,Str,Arr)=>{
      var db=new JFile(__dirname+"/db/sh.abdennoor");
      class ShortURL{
        constructor(id,url,date){
          this.url=url;
          this.id=id;
          this.date=date || new Date().getTime();
          this.date=parseInt(this.date);
          return this;
        }

        save(){
            db.text+=`\n${this.toString()}`;
            return this;
        }
        remove(){
           let that=this;
            db.text=db.lines.filter((line)=> line !== that.toString() ).join('\n');
        }
        toString(){
          return `${this.id}:::${this.url}:::${this.date}`;
        }
      }
         api.CALIBRE=4;
         api.init=function(){

         };
         api.ORM=function(line){
           line=line.split(':::');
           return new ShortURL(line[0],line[1],line[2]);
         }
         api.table=function(){
          return db.lines.filter((e,i)=> !e.startsWith('#') && e.contains(':::'));
         };
         api.metaTable=function(){
           return {'id':0,'url':1,'date':2};
         }
         /**
         *  0 -> id , 1 ->url , 2-> date
         */
         api.projectionBy=function(col){
           col=api.metaTable()[col];
           return api.table().map((e,i)=> e.split(':::')[col]);
         };
         api.findAllBy=function(prop,val){
              prop=api.metaTable()[prop];
             return api.table().filter((e,i)=> val===e.split(':::')[prop]).map((e,i)=> api.ORM(e));
         };
         api.findOneBy=function(prop,val){
              let all=api.findAllBy(prop,val);
              if(all.length){
                return all[0];
              }
         };
         api.shortenDone=function(url){
            return api.projectionBy('url').contains(url);
         };
         api.checkIDAvail=function(IdAttempt){
           return !api.projectionBy('id').contains(IdAttempt);
         }
         api.makeRandom=function(){
        //   return Math.random().toString(36).substring(12-api.CALIBRE);
          return Array.apply(0, Array(api.CALIBRE)).map(function() {
                      return (function(charset){
                          return charset.charAt(Math.floor(Math.random() * charset.length))
                      }('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'));
                  }).join('');
         }
         api.generateID=function(url){
              let ids=api.projectionBy('id'),attmp=api.makeRandom();

              while(ids.contains(attmp)){
                attmp=api.makeRandom();
              }
              return attmp;
         };
         api.getURL=function(id,fn){
           let row=api.findOneBy('id',id);
           if(typeof fn ==='function'){
             return fn.call(null,row.url,row);
           }
            else{
              if(row){
                return row.url;
              }
            }
         };
         api.setIdSync=function(url,suggestion){
           if(suggestion){
                let avail= api.checkIDAvail(suggestion);
                if(avail){
                   new ShortURL(suggestion,url).save();
                }

                return avail;
           }else{
             suggestion=(api.shortenDone(url))?api.findOneBy('url',url):new ShortURL(api.generateID(url),url).save();
             return suggestion.id;
           }
         }
         api.setIdAsync=function(url,suggestion,fn){
                 if(typeof fn==='function'){
                   let avail=api.checkIDAvail(suggestion);
                   if(avail){
                     new ShortURL(suggestion,url).save();
                   }
                     fn.call(null,avail);

                 }else{
                    fn=suggestion;
                    suggestion=(api.shortenDone(url))?api.findOneBy('url',url):new ShortURL(api.generateID(url),url).save();

                    fn.call(null,suggestion.id,suggestion);
                 }
         };
         api.setId=function(){
           if(Array.from(arguments).filter((arg)=>typeof arg ==='function').length){
             return api.setIdAsync(...arguments);
           }else{
             return api.setIdSync(...arguments);
           }
         }
         api.conf=function(o){
           if(typeof o ==='object'){
              api.CALIBRE=o.length || api.CALIBRE;
           }
           return {length:api.CALIBRE};
         };
         api.engine=function(){
           if(!new String(arguments[0]).isUrl()){
             return api.getURL(...arguments);
           }else{
              return api.setId(...arguments);
           }
         }
         api.engine.API=api;
         api.engine.conf=api.conf;
         api.engine.all=function(){
           return api.projectionBy('id');
         };
         m.exports=api.engine;

    })(r('jfile'),r('x-string'),r('x-array'))
})({},require,module,function(){console.log(...arguments)})
